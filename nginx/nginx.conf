server {
    listen 80;
    server_name localhost;

    location / {
        root /usr/share/nginx/html;
        index index.html;
        try_files $uri $uri/ /index.html;
    }

    location /api/ {
        proxy_pass http://backend:3000/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    location /content/ {
        proxy_pass http://backend:3000/content/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
}


# events {
#     worker_connections 1024;  # Максимальное количество соединений на worker-процесс
# }


# http {
#     # Базовые настройки MIME-типов
#     include       /etc/nginx/mime.types;
#     default_type  application/octet-stream;
#     # Фронтенд
#     server {
#             listen 80;          # IPv4
#             listen [::]:80;     # IPv6
#             # server_name localhost;
#             server_name rvs.students.nomorepartiessbs.ru;

#             location / {
#                 root /usr/share/nginx/html;  # Путь к статике фронтенда
#                 index index.html;        # Главная страница
#                 try_files $uri $uri/ /index.html;  # Для роутинга
#             }
#         }

#     # Бэкенд
#     server {
#             listen 80;
#             listen [::]:80;
#             server_name api.rvs.students.nomorepartiessbs.ru;  # Домен API

#             location / {
#                 proxy_pass http://localhost:3000;  # Проксирование на бэкенд
#                 proxy_http_version 1.1;
#                 proxy_set_header Upgrade $http_upgrade; нужны для поддержки WebSocket соединений
#                 proxy_set_header Connection 'upgrade';
#                 proxy_set_header Host $host;  # передаёт оригинальное имя хоста на бэкенд
#                 proxy_cache_bypass $http_upgrade;
#             }

#             location /content/afisha/ {
#                 proxy_pass http://backend:3000;
#                 proxy_set_header Host $host;
#                 proxy_set_header X-Real-IP $remote_addr; сохраняют реальный IP клиента (без этого бэкенд будет видеть только IP nginx)
#                 proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#                 proxy_set_header X-Forwarded-Proto $scheme;
#                 # Настройки кэширования для статики
#                 expires 30d;
#                 add_header Cache-Control "public";
#             }
#     }
# } 


# server {
#         listen       80;
#         server_name  localhost;
        
#         # Статика фронтенда
#         location / {
#             root   /usr/share/nginx/html;
#             try_files $uri $uri/ /index.html;
#             index  index.html;
                        
#             add_header Cache-Control "no-cache, no-store, must-revalidate";
#             add_header Pragma "no-cache";
#             add_header Expires "0";
#         }

#         # API endpoints
#         location /api {
#             rewrite ^/api/(.*)$ /api/afisha/$1 break;
#             proxy_pass http://backend:3000;
            
#             proxy_set_header Host $host;
#             proxy_set_header X-Real-IP $remote_addr;
#             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#             proxy_set_header X-Forwarded-Proto $scheme;
            
#             proxy_http_version 1.1;
#             proxy_set_header Connection "";
            
#             # Таймауты
#             proxy_connect_timeout 60s;
#             proxy_read_timeout 60s;
#         }

#         # Healthcheck endpoint
#         location = /healthcheck {
#             proxy_pass http://backend:3000/api/afisha/healthcheck;
#             proxy_set_header Host $host;
            
#             # Быстрый ответ без кеширования
#             add_header Cache-Control "no-store";
#             access_log off;
#         }

#         # Статика бэкенда
#         location /content {
#             proxy_pass http://backend:3000;
#             proxy_set_header Host $host;
            
#             # Кеширование статики
#             expires 1d;
#             access_log off;
#         }

#         # Обработка ошибок
#         error_page 500 502 503 504 /50x.html;
#         location = /50x.html {
#             root   /usr/share/nginx/html;
#             internal;
#         }
#     }





    